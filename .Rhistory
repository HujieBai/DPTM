stop('\n',"The independent Matrix is singular",'\n')
}
#GMM
mx <- suppressWarnings(try(nlm(GMM_los_r,beta_init,yy=(yy),xxx = (xxx),
HH = (HH),P1n = (P1n),
P2n = (P2n),P3n = (P3n),
P4n = (P4n),omega = (omega1),
nys = nys, ny1s = ny1s,ybl = ybl,rtsy = rtsy,
iterlim = 500,steptol = steptol),silent = TRUE))
if("try-error" %in% class(mx)){
stop('\n',"GMM-Error!",'\n')
}
beta_gmm2 <- as.vector(mx$estimate)
beta_gmm2
rm(list = ls())
Rcpp::sourceCpp("D:/my_work/Desktop/R1/Spatial_Model_GMM/used_function.cpp")
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
sdm <- function(mt){
sds <- sqrt((colSums(t((t(mt) - colMeans(mt))^2)))/(nrow(mt)-1))
return(sds)
}
#固定门槛
dgp_1cons = function(t,n){
rho1=0.3
rho2=-0.3
la1=-0.6
la2=0.6
a1=0.3
a2=-0.3
b11 = 1
b12 = 1
b21 = 2
b22 = 2
gamm = 0.2
t = t+1
# generate data
tt = t
nt = n*tt
t=tt
###############################################
w = matrix(0,n,n)
for (i in 1:n) {
for (j in 1:n) {
if(i<j & i> (j-4)) {w[i,j]=1}
else {w[i,j]=0}
if (i>j) {w[i,j]=w[j,i]}
}
}
ws = rowSums(w)
w = w/ws
##############################################
ai = rnorm(n,1)  # fixed effect
thresh <- rnorm(nt,mean = 0.2,sd=2)
q = thresh
d = (thresh <= gamm)
d2 = 1-d
x <- matrix(NA,tt,n)
for (j in 1:n) {
x[,j] = rnorm(tt,sd=9)+0.25*ai[j]
}
x = as.vector(x)
x1 <- x*d
x2 <- x*d2
h <- kronecker(w,diag(tt))
wx <- h%*%x
e <- 0.5*rnorm(nt,0)
#y1m = 3*x+2*wx+e
y1m = b11*x1 + b12*h%*%x*d+e*d
y2m = b21*x2 + b22*h%*%x*d2+e*d2
#y1 = solve(diag(nt)-0.5*h)%*%y1m*d
#y2 = solve(diag(nt)-0.5*h)%*%y2m*d2
#yold = solve(diag(nt)-0.5*h*d-0.2*h*d2)%*%(y1m+y2m)
dm = matrix(d,t,n)
d2m <- matrix(d2,tt,n)
y3m = matrix(y1m,t,n)
y4m = matrix(y2m,t,n)
y <- matrix(NA,t,n)
y[1,] = rnorm(n)
for (j in 2:t) {
#dm <- matrix(d,tt,n)
y1_1 <- y[(j-1),]*dm[j,]
y2_1 <- y[(j-1),]*d2m[j,]
wy1_1 <- w%*%y[(j-1),]*dm[j,]
wy2_1 <- w%*%y[(j-1),]*d2m[j,]
dj = dm[j,]
dj = as.vector(dj)
dd = diag(dj,n)
dd2 =diag(n)-dd
dj = d2m[j,]
dj = as.vector(dj)
dd2 = diag(dj,n)
y[j,] = solve(diag(n)-a1*dd%*%w-a2*dd2%*%w)%*%(rho1*y1_1+rho2*y2_1+la1*wy1_1+la2*wy2_1 + y3m[j,]+y4m[j,]+1*ai)
}
ym = y
y = as.vector(ym)
return(list(y=y,x=x,q=q,w=w,t=t,n=n))
}
dc <- dgp_1cons(5,50)
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$beta_iv
m2$Ths_gmm
m2$beta_gmm
m2$Ths_ogmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_gmm
m2$beta_ogmm
m2$beta_iv
diag(diag(as.matrix(matrix(1:9,3,3))))
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$Ths_gmm
m2$beta_iv
,m2$beta_gmm
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$Ths_gmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$beta_ogmm
m2$beta_gmm
m2$beta_iv
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$beta_ogmm
m2$beta_gmm
#固定门槛
dgp_1cons = function(t,n){
rho1=0.3
rho2=-0.3
la1=-0.6
la2=0.6
a1=0.3
a2=-0.3
b11 = 1
b12 = 1
b21 = 2
b22 = 2
gamm = 0.2
t = t+1
# generate data
tt = t
nt = n*tt
t=tt
###############################################
w = matrix(0,n,n)
for (i in 1:n) {
for (j in 1:n) {
if(i<j & i> (j-4)) {w[i,j]=1}
else {w[i,j]=0}
if (i>j) {w[i,j]=w[j,i]}
}
}
ws = rowSums(w)
w = w/ws
##############################################
ai = rnorm(n,1)  # fixed effect
thresh <- rnorm(nt,mean = 0.2,sd=1)
q = thresh
d = (thresh <= gamm)
d2 = 1-d
x <- matrix(NA,tt,n)
for (j in 1:n) {
x[,j] = rnorm(tt,sd=1)+0.25*ai[j]
}
x = as.vector(x)
x1 <- x*d
x2 <- x*d2
h <- kronecker(w,diag(tt))
wx <- h%*%x
e <- 0.5*rnorm(nt,0)
#y1m = 3*x+2*wx+e
y1m = b11*x1 + b12*h%*%x*d+e*d
y2m = b21*x2 + b22*h%*%x*d2+e*d2
#y1 = solve(diag(nt)-0.5*h)%*%y1m*d
#y2 = solve(diag(nt)-0.5*h)%*%y2m*d2
#yold = solve(diag(nt)-0.5*h*d-0.2*h*d2)%*%(y1m+y2m)
dm = matrix(d,t,n)
d2m <- matrix(d2,tt,n)
y3m = matrix(y1m,t,n)
y4m = matrix(y2m,t,n)
y <- matrix(NA,t,n)
y[1,] = rnorm(n)
for (j in 2:t) {
#dm <- matrix(d,tt,n)
y1_1 <- y[(j-1),]*dm[j,]
y2_1 <- y[(j-1),]*d2m[j,]
wy1_1 <- w%*%y[(j-1),]*dm[j,]
wy2_1 <- w%*%y[(j-1),]*d2m[j,]
dj = dm[j,]
dj = as.vector(dj)
dd = diag(dj,n)
dd2 =diag(n)-dd
dj = d2m[j,]
dj = as.vector(dj)
dd2 = diag(dj,n)
y[j,] = solve(diag(n)-a1*dd%*%w-a2*dd2%*%w)%*%(rho1*y1_1+rho2*y2_1+la1*wy1_1+la2*wy2_1 + y3m[j,]+y4m[j,]+1*ai)
}
ym = y
y = as.vector(ym)
return(list(y=y,x=x,q=q,w=w,t=t,n=n))
}
dc <- dgp_1cons(5,50)
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
#固定门槛
dgp_1cons = function(t,n){
rho1=0.3
rho2=-0.3
la1=-0.6
la2=0.6
a1=0.3
a2=-0.3
b11 = 1
b12 = 1
b21 = 2
b22 = 2
gamm = 0.2
t = t+1
# generate data
tt = t
nt = n*tt
t=tt
###############################################
w = matrix(0,n,n)
for (i in 1:n) {
for (j in 1:n) {
if(i<j & i> (j-4)) {w[i,j]=1}
else {w[i,j]=0}
if (i>j) {w[i,j]=w[j,i]}
}
}
ws = rowSums(w)
w = w/ws
##############################################
ai = rnorm(n,1)  # fixed effect
thresh <- rnorm(nt,mean = 0.2,sd=2)
q = thresh
d = (thresh <= gamm)
d2 = 1-d
x <- matrix(NA,tt,n)
for (j in 1:n) {
x[,j] = rnorm(tt,sd=9)+0.25*ai[j]
}
x = as.vector(x)
x1 <- x*d
x2 <- x*d2
h <- kronecker(w,diag(tt))
wx <- h%*%x
e <- 0.5*rnorm(nt,0)
#y1m = 3*x+2*wx+e
y1m = b11*x1 + b12*h%*%x*d+e*d
y2m = b21*x2 + b22*h%*%x*d2+e*d2
#y1 = solve(diag(nt)-0.5*h)%*%y1m*d
#y2 = solve(diag(nt)-0.5*h)%*%y2m*d2
#yold = solve(diag(nt)-0.5*h*d-0.2*h*d2)%*%(y1m+y2m)
dm = matrix(d,t,n)
d2m <- matrix(d2,tt,n)
y3m = matrix(y1m,t,n)
y4m = matrix(y2m,t,n)
y <- matrix(NA,t,n)
y[1,] = rnorm(n)
for (j in 2:t) {
#dm <- matrix(d,tt,n)
y1_1 <- y[(j-1),]*dm[j,]
y2_1 <- y[(j-1),]*d2m[j,]
wy1_1 <- w%*%y[(j-1),]*dm[j,]
wy2_1 <- w%*%y[(j-1),]*d2m[j,]
dj = dm[j,]
dj = as.vector(dj)
dd = diag(dj,n)
dd2 =diag(n)-dd
dj = d2m[j,]
dj = as.vector(dj)
dd2 = diag(dj,n)
y[j,] = solve(diag(n)-a1*dd%*%w-a2*dd2%*%w)%*%(rho1*y1_1+rho2*y2_1+la1*wy1_1+la2*wy2_1 + y3m[j,]+y4m[j,]+1*ai)
}
ym = y
y = as.vector(ym)
return(list(y=y,x=x,q=q,w=w,t=t,n=n))
}
dc <- dgp_1cons(5,50)
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$beta_ogmm
m2$beta_gmm
m2$beta_iv
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$beta_ogmm
m2$beta_gmm
m2$beta_iv
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
c(m2$Ths_iv,m2$beta_iv,m2$Ths_gmm,m2$beta_gmm,m2$Ths_ogmm,m2$beta_ogmm)
m2$beta_ogmm
m2$beta_gmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
m2$Ths_iv
m2$Ths_gmm
m2$Ths_ogmm
m2$beta_iv
m2$beta_gmm
m2$beta_ogmm
source("D:/my_work/Desktop/R1/Spatial_Model_GMM/Threshold_model.R")
m2 <- Constant_Threhsold_S_GMM(y=dc$y,y1 = NULL,x= as.matrix(dc$x),cvs = NULL,w=dc$w,tt=dc$t,nn=dc$n,q=dc$q,
NoWy = FALSE,Noy1 = FALSE,Nox = FALSE,
Th=1,ms = 1000,burnin=1000,types = "DREAMzs",
ADs = FALSE,r0x=NULL,r1x=NULL)
c(m2$Ths_iv,m2$beta_iv,m2$Ths_gmm,m2$beta_gmm,m2$Ths_ogmm,m2$beta_ogmm)
m2$Ths_ogmm
m2$Ths_gmm
m2$beta_gmm
m2$beta_iv
install.packages("D:/my_work/Desktop/R1/Dp/NEW/DPTM_1.1.6.tar.gz", repos = NULL, type = "source")
library(DPTM)
remove.packages("DPTM")
install.packages("D:/my_work/Desktop/R1/Dp/NEW/DPTM_1.1.6.tar.gz", repos = NULL, type = "source")
library(DPTM)
data("data", package = "DPTM")
y <- data$data_test$y
q <- data$data_test$q
x <- as.matrix(data$data_test$x)
z <- as.matrix(data$data_test$z)
tt <- data$data_test$tt
nn <- data$data_test$nn
m1 <- Threshold_Test(y=y,x=x,q=q,cvs=z,tt=tt,nn=nn,Th=0,ms = 500,burnin=500,
assumption = 1,bt=10,parallel=FALSE)
m1$ps
m2 <- Threshold_Test(y=y,x=x,q=q,cvs=z,tt=tt,nn=nn,Th=0,ms = 500,burnin=500,
assumption = 1,bt=10,parallel=TRUE)
install.packages("dtp")
library(dtp)
data(Mena)
reg<-dtp(GDPPC ~ FDI+OPEN|INF|INF,Mena,index=c("pays","ann"),4,2,0.95,0.8,1,graph = TRUE)
summary(reg)
reg<-dtp(GDPPC ~ FDI+OPEN|INF|INF,Mena,index=c("pays","ann"),4,2,0.95,0.8,1,graph = TRUE)
summary(reg)
devtools::install_github("jiamin616/dptee")
devtools::install_github("Jiamin616/dptee")
library(dptee)
data("data", package = "DPTM")
y <- data$data_test_linear$y
q <- data$data_test_linear$q
x <- as.matrix(data$data_test_linear$x)
z <- as.matrix(data$data_test_linear$z)
tt <- data$data_test_linear$tt
nn <- data$data_test_linear$nn
xx <- cbind(x,z)
m1 <- DPML(y=y,x=xx,tt=tt,nn=nn,assumption = 1)
m1$Coefs
jgs <- cbind(coefs,xzx,Zvalues[length(coefs)])
m1$Zvalues
detach("package:DPTM", unload = TRUE)
setwd("D:/my_work/Desktop/R1/Dp/NEW/DPTM")
Rcpp::compileAttributes()
devtools::document()
Rcpp::compileAttributes()
devtools::document()
devtools::check()
Rcpp::compileAttributes()
devtools::document()
devtools::check()
builtins()
devtools::build()
