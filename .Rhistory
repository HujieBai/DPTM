xxx <- NULL
IVS <- NULL
lhx <- NULL
lhx1 <- NULL
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
ths <- 0.2
thetas <- c(0,0,-0.5,0.04)
rts <- matrix(q,nrow = ybl,ncol = (Th)) - matrix(ths,nrow  =ybl,ncol = Th,byrow = TRUE)
rts[which(rts>0,arr.ind = TRUE)] <- 1
rts[which(rts<=0,arr.ind = TRUE)] <- 0
rts0 <- cbind(rep(1,ybl),rts)
for (i in 1:(ncol(rts0)-1)) {
rts0[,i] <- rts0[,i] - rts0[,i+1]
}
xxx <- NULL
IVS <- NULL
lhx <- NULL
lhx1 <- NULL
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
thetas
thetas = matrix(thetas,2,byrow = TRUE)
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
lhx1 <- lag_transform(lhx,tt,nn,1,TRUE)
lhx <- lag_transform(lhx,tt,nn,1,FALSE)
whx <- h%*%lhx
w2hx <- h2%*%lhx
whx1 <- h%*%lhx1
w2hx1 <- h2%*%lhx1
hsh <- list()
if(isFALSE(NoWy)){
xxx <- cbind(xxx,h%*%matrix(y,ybl,ny)*rts0)
for (i in 1:ncol(rts0)) {
hsh[[i]] <- (diag(as.vector(rts0[,i]))%*%h)
}
}else{
xxx <- cbind(xxx,h%*%y)
hsh[[1]] <- h
}
if(isFALSE(Noy1)){
xxx <- cbind(xxx,matrix(y1,ybl,ny)*rts0,h%*%matrix(y1,ybl,ny)*rts0)
}else{
xxx <- cbind(xxx,y1,h%*%y1)
}
# xx <- NULL
# wxx <- NULL
# w2xx <- NULL
# xx1 <- NULL
# wxx1 <- NULL
# w2xx1 <- NULL
rts0x <- NULL
#
# for (i in 1:ny) {
#   xx <- rbind(xx,lhx)
#   wxx <- rbind(wxx,whx)
#   w2xx <- rbind(w2xx,w2hx)
#   xx1 <- rbind(xx1,lhx1)
#   wxx1 <- rbind(wxx1,whx1)
#   w2xx1 <- rbind(w2xx1,w2hx1)
# }
xx <- lhx
wxx <- whx
w2xx <- w2hx
xx1 <- lhx1
wxx1 <- whx1
w2xx1 <- w2hx1
for (i in 1:nhx) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
IVS <- cbind(IVS,xx*rts0x,xx1*rts0x,wxx*rts0x,wxx1*rts0x,w2xx*rts0x,
w2xx1*rts0x)
if(!is.null(x)){
if(isFALSE(Nox)){
xx <- NULL
wxx <- NULL
w2xx <- NULL
xx1 <- NULL
wxx1 <- NULL
w2xx1 <- NULL
rts0x <- NULL
for (i in 1:ny) {
xx <- rbind(xx,x)
wxx <- rbind(wxx,wx)
w2xx <- rbind(w2xx,w2x)
xx1 <- rbind(xx1,x1)
wxx1 <- rbind(wxx1,wx1)
w2xx1 <- rbind(w2xx1,w2x1)
}
xx <- matrix(xx,nrow = nrow(x))
wxx <- matrix(wxx,nrow = nrow(x))
w2xx <- matrix(w2xx,nrow = nrow(x))
xx1 <- matrix(xx1,nrow = nrow(x))
wxx1 <- matrix(wxx1,nrow = nrow(x))
w2xx1 <- matrix(w2xx1,nrow = nrow(x))
for (i in 1:ncol(x)) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
IVS <- cbind(IVS,xx*rts0x,xx1*rts0x,wxx*rts0x,wxx1*rts0x,w2xx*rts0x,
w2xx1*rts0x)
}else{
xxx <- cbind(xxx,x,wx)
IVS <- cbind(IVS,x,x1,wx,wx1,w2x,w2x1)
}
}
if(!is.null(cvs)){
xxx <- cbind(xxx,cvs,wc)
IVS <- cbind(IVS,cvs,c1,wc,wc1,w2c,w2c1)
}
IVS <- tre(as.matrix(IVS),TT,nn)
xxxx <- xxx
xxx <- tre(as.matrix(xxx),TT,nn)
mx <- tsls_los(as.matrix(xxx),as.matrix(IVS),as.vector(yy))
betas <- as.vector(mx$betas)
betas_two <- betas[(nys+1):length(betas)]
Coefs0 <-  betas[1:nys]
idx2 <- xxxx[,(nys+1):length(betas)]
# idx2 <- mx$khat[,(nys+1):length(betas)]
XB <- idx2%*%betas_two
Sn <- 0
for (i in 1:length(hsh)) {
Sn <- Sn + Coefs0[i]*hsh[[i]]
}
Sn <- diag(ybl) - Sn
sse0 <- sum(as.matrix(Sn%*%y -XB)^2)
sse0
Sn
mx$betas
xxx
rts <- matrix(q,nrow = ybl,ncol = (Th)) - matrix(ths,nrow  =ybl,ncol = Th,byrow = TRUE)
rts[which(rts>0,arr.ind = TRUE)] <- 1
rts[which(rts<=0,arr.ind = TRUE)] <- 0
rts0 <- cbind(rep(1,ybl),rts)
for (i in 1:(ncol(rts0)-1)) {
rts0[,i] <- rts0[,i] - rts0[,i+1]
}
xxx <- NULL
IVS <- NULL
lhx <- NULL
lhx1 <- NULL
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
lhx1 <- lag_transform(lhx,tt,nn,1,TRUE)
lhx <- lag_transform(lhx,tt,nn,1,FALSE)
whx <- h%*%lhx
w2hx <- h2%*%lhx
whx1 <- h%*%lhx1
w2hx1 <- h2%*%lhx1
hsh <- list()
if(isFALSE(NoWy)){
xxx <- cbind(xxx,h%*%matrix(y,ybl,ny)*rts0)
for (i in 1:ncol(rts0)) {
hsh[[i]] <- (diag(as.vector(rts0[,i]))%*%h)
}
}else{
xxx <- cbind(xxx,h%*%y)
hsh[[1]] <- h
}
if(isFALSE(Noy1)){
xxx <- cbind(xxx,matrix(y1,ybl,ny)*rts0,h%*%matrix(y1,ybl,ny)*rts0)
}else{
xxx <- cbind(xxx,y1,h%*%y1)
}
# xx <- NULL
# wxx <- NULL
# w2xx <- NULL
# xx1 <- NULL
# wxx1 <- NULL
# w2xx1 <- NULL
rts0x <- NULL
#
# for (i in 1:ny) {
#   xx <- rbind(xx,lhx)
#   wxx <- rbind(wxx,whx)
#   w2xx <- rbind(w2xx,w2hx)
#   xx1 <- rbind(xx1,lhx1)
#   wxx1 <- rbind(wxx1,whx1)
#   w2xx1 <- rbind(w2xx1,w2hx1)
# }
xx <- lhx
wxx <- whx
w2xx <- w2hx
xx1 <- lhx1
wxx1 <- whx1
w2xx1 <- w2hx1
for (i in 1:nhx) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
IVS <- cbind(IVS,xx*rts0x,xx1*rts0x,wxx*rts0x,wxx1*rts0x,w2xx*rts0x,
w2xx1*rts0x)
if(!is.null(x)){
if(isFALSE(Nox)){
xx <- NULL
wxx <- NULL
w2xx <- NULL
xx1 <- NULL
wxx1 <- NULL
w2xx1 <- NULL
rts0x <- NULL
for (i in 1:ny) {
xx <- rbind(xx,x)
wxx <- rbind(wxx,wx)
w2xx <- rbind(w2xx,w2x)
xx1 <- rbind(xx1,x1)
wxx1 <- rbind(wxx1,wx1)
w2xx1 <- rbind(w2xx1,w2x1)
}
xx <- matrix(xx,nrow = nrow(x))
wxx <- matrix(wxx,nrow = nrow(x))
w2xx <- matrix(w2xx,nrow = nrow(x))
xx1 <- matrix(xx1,nrow = nrow(x))
wxx1 <- matrix(wxx1,nrow = nrow(x))
w2xx1 <- matrix(w2xx1,nrow = nrow(x))
for (i in 1:ncol(x)) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
IVS <- cbind(IVS,xx*rts0x,xx1*rts0x,wxx*rts0x,wxx1*rts0x,w2xx*rts0x,
w2xx1*rts0x)
}else{
xxx <- cbind(xxx,x,wx)
IVS <- cbind(IVS,x,x1,wx,wx1,w2x,w2x1)
}
}
if(!is.null(cvs)){
xxx <- cbind(xxx,cvs,wc)
IVS <- cbind(IVS,cvs,c1,wc,wc1,w2c,w2c1)
}
IVS <- tre(as.matrix(IVS),TT,nn)
xxxx <- xxx
xxx <- tre(as.matrix(xxx),TT,nn)
mx <- tsls_los(as.matrix(xxx),as.matrix(IVS),as.vector(yy))
betas <- as.vector(mx$betas)
betas_two <- betas[(nys+1):length(betas)]
Coefs0 <-  betas[1:nys]
idx2 <- xxxx[,(nys+1):length(betas)]
# idx2 <- mx$khat[,(nys+1):length(betas)]
XB <- idx2%*%betas_two
Sn <- 0
for (i in 1:length(hsh)) {
Sn <- Sn + Coefs0[i]*hsh[[i]]
}
Sn <- diag(ybl) - Sn
sse0 <- sum(as.matrix(Sn%*%y -XB)^2)
sse0
IVS
xxx
yy
rts <- matrix(q,nrow = ybl,ncol = (Th)) - matrix(ths,nrow  =ybl,ncol = Th,byrow = TRUE)
rts[which(rts>0,arr.ind = TRUE)] <- 1
rts[which(rts<=0,arr.ind = TRUE)] <- 0
rts0 <- cbind(rep(1,ybl),rts)
rts0
for (i in 1:(ncol(rts0)-1)) {
rts0[,i] <- rts0[,i] - rts0[,i+1]
}
rts0
xxx <- NULL
IVS <- NULL
lhx <- NULL
lhx1 <- NULL
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
lhx
ny
i=2
thetai <- thetas[i,]
thetai
rm(thetai)
rm(i)
thetas
thetas = t(as.matrix(as.vector(thetas)))
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
lhx1 <- lag_transform(lhx,tt,nn,1,TRUE)
lhx <- lag_transform(lhx,tt,nn,1,FALSE)
whx <- h%*%lhx
w2hx <- h2%*%lhx
whx1 <- h%*%lhx1
w2hx1 <- h2%*%lhx1
hsh <- list()
if(isFALSE(NoWy)){
xxx <- cbind(xxx,h%*%matrix(y,ybl,ny)*rts0)
for (i in 1:ncol(rts0)) {
hsh[[i]] <- (diag(as.vector(rts0[,i]))%*%h)
}
}else{
xxx <- cbind(xxx,h%*%y)
hsh[[1]] <- h
}
if(isFALSE(Noy1)){
xxx <- cbind(xxx,matrix(y1,ybl,ny)*rts0,h%*%matrix(y1,ybl,ny)*rts0)
}else{
xxx <- cbind(xxx,y1,h%*%y1)
}
# xx <- NULL
# wxx <- NULL
# w2xx <- NULL
# xx1 <- NULL
# wxx1 <- NULL
# w2xx1 <- NULL
rts0x <- NULL
#
# for (i in 1:ny) {
#   xx <- rbind(xx,lhx)
#   wxx <- rbind(wxx,whx)
#   w2xx <- rbind(w2xx,w2hx)
#   xx1 <- rbind(xx1,lhx1)
#   wxx1 <- rbind(wxx1,whx1)
#   w2xx1 <- rbind(w2xx1,w2hx1)
# }
xx <- lhx
wxx <- whx
w2xx <- w2hx
xx1 <- lhx1
wxx1 <- whx1
w2xx1 <- w2hx1
for (i in 1:nhx) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
rts <- matrix(q,nrow = ybl,ncol = (Th)) - matrix(ths,nrow  =ybl,ncol = Th,byrow = TRUE)
rts[which(rts>0,arr.ind = TRUE)] <- 1
rts[which(rts<=0,arr.ind = TRUE)] <- 0
rts0 <- cbind(rep(1,ybl),rts)
ths
thetas
thetas[1,2] = 0
thetas[1,3] = -0.5
thetas
rts <- matrix(q,nrow = ybl,ncol = (Th)) - matrix(ths,nrow  =ybl,ncol = Th,byrow = TRUE)
rts[which(rts>0,arr.ind = TRUE)] <- 1
rts[which(rts<=0,arr.ind = TRUE)] <- 0
rts0 <- cbind(rep(1,ybl),rts)
for (i in 1:(ncol(rts0)-1)) {
rts0[,i] <- rts0[,i] - rts0[,i+1]
}
xxx <- NULL
IVS <- NULL
lhx <- NULL
lhx1 <- NULL
for (i in 1:nhx) {
thetai <- thetas[i,]
for (j in 1:ny) {
lhx <- cbind(lhx,(hx[,(m*(i-1)+1):(i*m)])%*%nealmonc(c(1,thetai[(1+2*(j-1)):(2*j)]),m))
}
}
lhx1 <- lag_transform(lhx,tt,nn,1,TRUE)
lhx <- lag_transform(lhx,tt,nn,1,FALSE)
whx <- h%*%lhx
w2hx <- h2%*%lhx
whx1 <- h%*%lhx1
w2hx1 <- h2%*%lhx1
hsh <- list()
if(isFALSE(NoWy)){
xxx <- cbind(xxx,h%*%matrix(y,ybl,ny)*rts0)
for (i in 1:ncol(rts0)) {
hsh[[i]] <- (diag(as.vector(rts0[,i]))%*%h)
}
}else{
xxx <- cbind(xxx,h%*%y)
hsh[[1]] <- h
}
if(isFALSE(Noy1)){
xxx <- cbind(xxx,matrix(y1,ybl,ny)*rts0,h%*%matrix(y1,ybl,ny)*rts0)
}else{
xxx <- cbind(xxx,y1,h%*%y1)
}
# xx <- NULL
# wxx <- NULL
# w2xx <- NULL
# xx1 <- NULL
# wxx1 <- NULL
# w2xx1 <- NULL
rts0x <- NULL
#
# for (i in 1:ny) {
#   xx <- rbind(xx,lhx)
#   wxx <- rbind(wxx,whx)
#   w2xx <- rbind(w2xx,w2hx)
#   xx1 <- rbind(xx1,lhx1)
#   wxx1 <- rbind(wxx1,whx1)
#   w2xx1 <- rbind(w2xx1,w2hx1)
# }
xx <- lhx
wxx <- whx
w2xx <- w2hx
xx1 <- lhx1
wxx1 <- whx1
w2xx1 <- w2hx1
for (i in 1:nhx) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
IVS <- cbind(IVS,xx*rts0x,xx1*rts0x,wxx*rts0x,wxx1*rts0x,w2xx*rts0x,
w2xx1*rts0x)
if(!is.null(x)){
if(isFALSE(Nox)){
xx <- NULL
wxx <- NULL
w2xx <- NULL
xx1 <- NULL
wxx1 <- NULL
w2xx1 <- NULL
rts0x <- NULL
for (i in 1:ny) {
xx <- rbind(xx,x)
wxx <- rbind(wxx,wx)
w2xx <- rbind(w2xx,w2x)
xx1 <- rbind(xx1,x1)
wxx1 <- rbind(wxx1,wx1)
w2xx1 <- rbind(w2xx1,w2x1)
}
xx <- matrix(xx,nrow = nrow(x))
wxx <- matrix(wxx,nrow = nrow(x))
w2xx <- matrix(w2xx,nrow = nrow(x))
xx1 <- matrix(xx1,nrow = nrow(x))
wxx1 <- matrix(wxx1,nrow = nrow(x))
w2xx1 <- matrix(w2xx1,nrow = nrow(x))
for (i in 1:ncol(x)) {
rts0x <- cbind(rts0x,rts0)
}
xxx <- cbind(xxx,xx*rts0x,wxx*rts0x)
IVS <- cbind(IVS,xx*rts0x,xx1*rts0x,wxx*rts0x,wxx1*rts0x,w2xx*rts0x,
w2xx1*rts0x)
}else{
xxx <- cbind(xxx,x,wx)
IVS <- cbind(IVS,x,x1,wx,wx1,w2x,w2x1)
}
}
if(!is.null(cvs)){
xxx <- cbind(xxx,cvs,wc)
IVS <- cbind(IVS,cvs,c1,wc,wc1,w2c,w2c1)
}
IVS <- tre(as.matrix(IVS),TT,nn)
xxxx <- xxx
xxx <- tre(as.matrix(xxx),TT,nn)
xxx
mx <- tsls_los(as.matrix(xxx),as.matrix(IVS),as.vector(yy))
betas <- as.vector(mx$betas)
betas_two <- betas[(nys+1):length(betas)]
Coefs0 <-  betas[1:nys]
idx2 <- xxxx[,(nys+1):length(betas)]
# idx2 <- mx$khat[,(nys+1):length(betas)]
XB <- idx2%*%betas_two
Sn <- 0
for (i in 1:length(hsh)) {
Sn <- Sn + Coefs0[i]*hsh[[i]]
}
Sn <- diag(ybl) - Sn
sse0 <- sum(as.matrix(Sn%*%y -XB)^2)
sse0
m1b$ssemin
betas
m1b$ssemin
m1b$coefs
install.packages("knitr")
library(knitr)
install.packages("tinytex")
library(tinytex)
# Chunk 1: data
data("quine", package = "MASS")
# Chunk 2: poisson
m_pois <- glm(Days ~ (Eth + Sex + Age + Lrn)^2, data = quine,
family = poisson)
# Chunk 3: negbin
library("MASS")
m_nbin <- glm.nb(Days ~ (Eth + Sex + Age + Lrn)^2, data = quine)
# Chunk 4: comparison
BIC(m_pois, m_nbin)
# Chunk 5: summary
summary(m_nbin)
install.packages("D:/my_work/Desktop/R1/Dp/NEW/DPTM_1.3.5.tar.gz", repos = NULL, type = "source")
library(DPTM)
?Threshold_Test
?Threshold_Test
?Threshold_Test
?DPTM::Threshold_Test
setwd("D:/my_work/Desktop/R1/Dp/NEW/DPTM")
detach("package:DPTM", unload = TRUE)
remove.packages("DPTM")
Rcpp::compileAttributes()
devtools::document()
devtools::build()
